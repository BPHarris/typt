# Example of operator overriding
# Money class based, loosely, on https://github.com/carlospalol/money

class Decimal:
    value : Float = 0.0

    def __init__(self, value : Float):
        self.value = value

    def test(self, s : String) -> String:
        return ''

    @operator
    def self (+) Int -> Decimal:
        return Decimal(self.value + int_to_float(other))


class Money:
    amount : Decimal = Decimal(0.0)
    currency : String = ''

    def __init__(self, amount : Float, currency : String):
        self.amount = Decimal(amount)
        self.currency = currency


def print_money(m : Money) -> None:
    print(m.currency + ' ' + float_to_string(m.amount.value))


def print_decimal(d: Decimal) -> None:
    print('Decimal(\'' + float_to_string(d.value) + '\')')


# Showcase operator overriding
example : Money = Money(44.0, 'GBP')
print_money(example)

print_decimal(example.amount)

print_decimal(example.amount + 4)

# Uncomment to show expected type error
# print_decimal(example.amount + 4.3)
