using:
    is_even_i(n: Int)       -> Bool
    is_even_f(n: Float,)    -> Bool
from library_name as short

using:
    different(x: Float, y: Float) -> None
from different_name

# a comment !
pass
continue
print()
print()
b : Bool = True == False
i : Int = 2 << 10
f : Float = 3 + 2
f : Float = 3 / 2
n : Int = -2

while False:
    pass

for x in iter:
    wowzers('!')

# ooh lad
if func('str'):
    x = 5 + 2 * y
    t : Bool = False
    s : Int
    different(2.3, 4.3)
    
    pass

# short suite example
if x:   do_this()

if x:
    print(x)
elif y:
    print(y)
elif z:
    print(a.b.c)
else:
    print('nufin')

def test_func(arg: Bool) -> None:
    return None

function: Float -> Float
def higher_order(arg: Int -> Int) -> Int:
    pass

class AClass:
    x : String = 'test'

    def __init__(self):
        pass

class BClass(AClass):
    x : Int = 6

    def repr(self) -> String:
        return 'B' + str(self.x)
    
    @staticmethod
    def static() -> Int:
        return 4 + 2 * math.pi

def pass_one() -> None:
    pass

def pass_two(arg : Int) -> None:
    pass
